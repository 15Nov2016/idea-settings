<application>
  <component name="VimEditorSettings">
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>ctor</entry>
      </history-search>
      <history-cmd>
        <entry>s</entry>
        <entry>q</entry>
        <entry encoding="base64">Pkc=</entry>
        <entry>source ~/.ideavimrc</entry>
        <entry>w</entry>
        <entry>183</entry>
        <entry>3316</entry>
        <entry>wq</entry>
        <entry>42</entry>
        <entry>343</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/replenish/Replenish.scala" timestamp="1595231042562" />
      <file name="/Dummy.scala" timestamp="1595234171513">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="37" />
        <mark key="." line="0" column="37" />
      </file>
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/spatialize/LaneSplitMerge.scala" timestamp="1595229572226" />
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/ir/base/MxfObjectId.scala" timestamp="1595239187110">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Sectioning.scala" timestamp="1595223300987" />
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/replenish/PerformVLbCandidate.scala" timestamp="1595225779939">
        <mark key="[" line="175" column="0" />
        <mark key="]" line="175" column="0" />
        <mark key="." line="175" column="0" />
      </file>
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/parser/ParseOsmPartition.scala" timestamp="1595232907252" />
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/replenish/ReplenishUtils.scala" timestamp="1595246103477">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/replenish/VirtualLbCandidate.scala" timestamp="1595310875684">
        <mark key="[" line="207" column="63" />
      </file>
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/Procedure.scala" timestamp="1595232896666" />
      <file name="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/ToIr.scala" timestamp="1595222568971">
        <mark key="[" line="79" column="24" />
        <mark key="]" line="79" column="28" />
        <mark key="." line="79" column="27" />
        <mark key="^" line="79" column="28" />
      </file>
      <file name="/fragment.java" timestamp="1595305623042">
        <mark key="[" line="0" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="3" column="40" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/test.scala" />
      <jump line="4" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/test.scala" />
      <jump line="159" column="115" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Split.scala" />
      <jump line="223" column="40" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Split.scala" />
      <jump line="15" column="34" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Split.scala" />
      <jump line="13" column="14" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/reference/RefManager.scala" />
      <jump line="0" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/reference/RefManager.scala" />
      <jump line="11" column="18" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/reference/RefManager.scala" />
      <jump line="21" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/reference/RefManager.scala" />
      <jump line="52" column="33" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/projectRef/RefCalculator.scala" />
      <jump line="178" column="23" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/ToIr.scala" />
      <jump line="79" column="28" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/projectRef/RefCalculator.scala" />
      <jump line="15" column="34" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/SectionUtils.scala" />
      <jump line="23" column="53" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/geometry/PolyLine.scala" />
      <jump line="53" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Split.scala" />
      <jump line="358" column="4" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/spatialize/Spatialize.scala" />
      <jump line="56" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Align.scala" />
      <jump line="234" column="36" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/ToIr.scala" />
      <jump line="261" column="57" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/Pylon.scala" />
      <jump line="21" column="68" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/geometry/LocationIndexedLine.scala" />
      <jump line="5" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/Test.scala" />
      <jump line="168" column="16" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/spatialize/Spatialize.scala" />
      <jump line="0" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/spatialize/Spatialize.scala" />
      <jump line="180" column="79" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/spatialize/Spatialize.scala" />
      <jump line="11" column="4" filename="$USER_HOME$/WorkSpace/nexus/nexus-binary/src/main/proto/proto/guidance_attr.proto" />
      <jump line="250" column="5" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/cursor/CursorSpaceOnIr.scala" />
      <jump line="256" column="44" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/cursor/CursorSpaceOnIr.scala" />
      <jump line="51" column="102" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/test/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/CursorSpaceSuite.scala" />
      <jump line="53" column="11" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/test/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/CursorSpaceSuite.scala" />
      <jump line="54" column="8" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/test/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/CursorSpaceSuite.scala" />
      <jump line="424" column="0" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/spatialize/Spatialize.scala" />
      <jump line="251" column="6" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/ToIr.scala" />
      <jump line="209" column="31" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/ToIr.scala" />
      <jump line="224" column="76" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/ToIr.scala" />
      <jump line="165" column="51" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/lanegrouping/Lanegrouping.scala" />
      <jump line="58" column="61" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/lanegrouping/laneTypeSplit/LaneTypeSplit.scala" />
      <jump line="188" column="43" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/test/scala/ai/momenta/hdmap/nexus/pylon/procedure/bind/BindSuite.scala" />
      <jump line="135" column="91" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/parser/ParseOsmPartition.scala" />
      <jump line="38" column="24" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/divergentArea/divergentArea.scala" />
      <jump line="45" column="96" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/divergentArea/divergentArea.scala" />
      <jump line="59" column="18" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/divergentArea/divergentArea.scala" />
      <jump line="344" column="144" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/divergentArea/divergentArea.scala" />
      <jump line="403" column="60" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/sectioning/divergentArea/divergentArea.scala" />
      <jump line="198" column="36" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/assemble/OSMAssembler.scala" />
      <jump line="0" column="8" filename="/a.dummy" />
      <jump line="216" column="45" filename="$USER_HOME$/WorkSpace/nexus/nexus-pylon/src/main/scala/ai/momenta/hdmap/nexus/pylon/procedure/replenish/VirtualLbCandidate.scala" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="4">
        <text encoding="base64">cmV0dXJuIA==</text>
      </register>
      <register name="-" type="4">
        <text encoding="base64">cmV0dXJuIA==</text>
      </register>
      <register name="/" type="4">
        <text>ctor</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgIGdzb24udG9Kc29uKHJlc3VsdCkK</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAgIH0K</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgIGlmIChsYW5lQm9yZGVyLmlkLnVuZGVybHlpbmcgPT0gMjEyMDcpIHsKICAgICAgICAgICAgdmFsIGEgPSAxCg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">cGFja2FnZSBhaS5tb21lbnRhLmhkbWFwLm5leHVzLnB5bG9uLnByb2NlZHVyZS5yZXBsZW5pc2gKCmltcG9ydCBhaS5tb21lbnRhLmhkbWFwLm5leHVzLnB5bG9uLmdlb21ldHJ5Lkdlb21ldHJ5Lk9yaWVudGF0aW9uLk9yaWVudGF0aW9uCmltcG9ydCBhaS5tb21lbnRhLmhkbWFwLm5leHVzLnB5bG9uLmdlb21ldHJ5LntQb2ludCwgUG9seUxpbmV9CmltcG9ydCBhaS5tb21lbnRhLmhkbWFwLm5leHVzLnB5bG9uLmlyLmJhc2UuTGFuZUJvcmRlcgppbXBvcnQgYWkubW9tZW50YS5oZG1hcC5uZXh1cy5weWxvbi5pci5yb2FkLkJvcmRlclR5cGUKaW1wb3J0IGFpLm1vbWVudGEuaGRtYXAubmV4dXMucHlsb24ucHJvY2VkdXJlLnJlcGxlbmlzaC5SZXBsZW5pc2guSW50ZXJ2YWwKaW1wb3J0IGFpLm1vbWVudGEuaGRtYXAubmV4dXMucHlsb24ucHJvY2VkdXJlLnNlY3Rpb25pbmcuTGJSZWZNYW5hZ2VyCmltcG9ydCBhaS5tb21lbnRhLmhkbWFwLm5leHVzLnB5bG9uLnByb2NlZHVyZS5zZWN0aW9uaW5nLmN1cnNvci5DdXJzb3JTcGFjZU9uSXIKaW1wb3J0IGFpLm1vbWVudGEuaGRtYXAubmV4dXMucHlsb24ucHJvY2VkdXJlLnNlY3Rpb25pbmcudmlzaXRvci5MaW5lT25JcgoKb2JqZWN0IFJlcGxlbmlzaFV0aWxzIHsKICBkZWYgZ2VuVkJvcmRlclBvbHlMaW5lKHRMaW5lOiBMaW5lT25Jciwgb3JpOiBPcmllbnRhdGlvbiwgc3BhY2U6IEN1cnNvclNwYWNlT25Jcik6IFNlcVtQb2x5TGluZV0gPSB7CgogICAgdmFsIGN0ID0gc3BhY2UuY3R4LmN0CiAgICBkZWYgZGlmZih3aG9sZUludGVydmFsOiBJbnRlcnZhbCwgdG9EaWZmOiBTZXFbSW50ZXJ2YWxdLCB0TGluZVBvbHlMaW5lOiBQb2x5TGluZSk6IFNlcVtJbnRlcnZhbF0gPSB7CiAgICAgIGltcG9ydCBPcmRlcmluZy5Eb3VibGUuVG90YWxPcmRlcmluZwogICAgICBkZWYgY29sbGFwc2UocnM6IFNlcVtJbnRlcnZhbF0sIHNlcDogU2VxW0ludGVydmFsXSA9IFNlcS5lbXB0eSk6IFNlcVtJbnRlcnZhbF0gPSBycyBtYXRjaCB7CiAgICAgICAgY2FzZSB4IDo6IHkgOjogcmVzdCA9PgogICAgICAgICAgaWYgKHkuc3RhcnQgPiB4LmVuZCkgY29sbGFwc2UoeSA6OiByZXN0LCBTZXEoeCkgKysgc2VwKQogICAgICAgICAgZWxzZSBjb2xsYXBzZShJbnRlcnZhbCh4LnN0YXJ0LCB4LmVuZCBtYXggeS5lbmQpIDo6IHJlc3QsIHNlcCkKICAgICAgICBjYXNlIF8gPT4KICAgICAgICAgIChycyArKyBzZXApLnJldmVyc2UKICAgICAgfQogICAgICBkZWYgbWVyZ2UocnM6IFNlcVtJbnRlcnZhbF0pOiBTZXFbSW50ZXJ2YWxdID0gY29sbGFwc2UocnMuc29ydEJ5KF8uc3RhcnQpKQogICAgICAvL1RPRE86IGkgaGF2ZSB0byByZS1jYWx1bGF0ZSB0aGUgdEhlYWQgYW5kIHRUYWlsIGJlY2F1c2UgZGlmZmVyZW50IGN0IG1heSBjYXVzZSB0aGUgb2Zmc2V0IGFuZCBsZW5ndGggaW5hY2N1cmF0ZS4KICAgICAgdmFsIG1lcmdlZERpZmYgPSBTZXEoSW50ZXJ2YWwoMCwgMCkpICsrIG1lcmdlKHRvRGlmZikgKysgU2VxKAogICAgICAgIEludGVydmFsKHRMaW5lUG9seUxpbmUubGVuZ3RoKGN0KSwgdExpbmVQb2x5TGluZS5sZW5ndGgoY3QpKQogICAgICApCiAgICAgIG1lcmdlZERpZmYKICAgICAgICAuc2xpZGluZygyKQogICAgICAgIC5mbGF0TWFwKHAgPT4gewogICAgICAgICAgdmFsIGggPSBwLmhlYWQKICAgICAgICAgIHZhbCBsID0gcC5sYXN0CiAgICAgICAgICBpZiAoaC5lbmQgIT0gbC5zdGFydCkgewogICAgICAgICAgICBTb21lKEludGVydmFsKGguZW5kLCBsLnN0YXJ0KSkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIE5vbmUKICAgICAgICAgIH0KCiAgICAgICAgfSkKICAgICAgICAudG9TZXEKCiAgICB9CgogICAgZGVmIGdldEJvcmRlclJlZnModExpbmVQb2x5TGluZTogUG9seUxpbmUpID0gewogICAgICBkZWYgZmlsdGVyTGJzKGxpbmU6IExpbmVPbklyKTogU2V0W0xhbmVCb3JkZXJdID0gewogICAgICAgIHZhbCByU2V0ID0gbGluZS5wb2ludHMKICAgICAgICAgIC5zbGlkaW5nKDIpCiAgICAgICAgICAuZmxhdE1hcCB7CiAgICAgICAgICAgIGNhc2UgU2VxKHMsIGUpID0+IG1pc1JlZkxicy5nZXQocywgZSkKICAgICAgICAgIH0KICAgICAgICAgIC5mbGF0dGVuCiAgICAgICAgICAudG9TZXQKICAgICAgICByU2V0CiAgICAgIH0KICAgICAgZGVmIGdldEludmVydmFsKGxhbmVCb3JkZXI6IExhbmVCb3JkZXIpID0gewogICAgICAgIHZhbCAoaGVhZE9mZnNldCwgdGFpbE9mZnNldCkgPSB0TGluZVBvbHlMaW5lLnByb2plY3RPZmZzZXQobGFuZUJvcmRlci5nZW9tZXRyeSwgY3QpCiAgICAgICAgSW50ZXJ2YWwoaGVhZE9mZnNldCwgdExpbmVQb2x5TGluZS5sZW5ndGgoY3QpIC0gdGFpbE9mZnNldCkKICAgICAgfQogICAgICB2YWwgbGJzID0gTGJSZWZNYW5hZ2VyLmdldExicyh0TGluZS5wb2ludHMsIHNwYWNlLCBTZXEob3JpKSwgY3QpCiAgICAgIHZhbCByZW1vdmVNaXNSZWZMYnMgPSBmaWx0ZXJMYnModExpbmUpCiAgICAgIGxicwogICAgICAgIC5maWx0ZXJOb3QobCA9PiByZW1vdmVNaXNSZWZMYnMuY29udGFpbnMobCkpCiAgICAgICAgLm1hcChsYiA9PiBsYiAtPiBnZXRJbnZlcnZhbChsYikpCiAgICB9CiAgICBkZWYgZ2VuZXJhdGVWQlBsKAogICAgICAgICAgICAgICAgICAgICAgbWlzc2luZ0ludGVydmFsOiBJbnRlcnZhbCwKICAgICAgICAgICAgICAgICAgICAgIGxiSW50ZXJ2YWw6IFNlcVsoTGFuZUJvcmRlciwgSW50ZXJ2YWwpXSwKICAgICAgICAgICAgICAgICAgICAgIHRMaW5lUG9seUxpbmU6IFBvbHlMaW5lCiAgICAgICAgICAgICAgICAgICAgKTogKE9wdGlvbltQb2x5TGluZV0sIFNlcVtMYW5lQm9yZGVyXSkgPSB7CgogICAgICAvKioKICAgICAgICogR2V0IHRoZSB2ZXJ0ZXggb2YgbGFuZSBib3JkZXIgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBvZmZzZXQuCiAgICAgICAqIEluc3RlYWQgb2YgZ2V0dGluZyB0aGUgaGVhZChsYXN0KSBwb2ludCBvZiBsYW5lIGJvcmRlci4KICAgICAgICogQmVjYXVzZSB0aGUgZGlyZWN0aW9uIG9mIGxhbmUgYm9yZGVyIG1pZ2h0IGJlIHJldmVyc2VkIHdpdGggdGhlIGxhbmVDZW50ZXIncy4KICAgICAgICogQHBhcmFtIG9mZnNldAogICAgICAgKiBAcGFyYW0gbGFuZUJvcmRlcgogICAgICAgKiBAcmV0dXJuCiAgICAgICAqLwogICAgICBkZWYgZ2V0TGJWZXJ0ZXgob2Zmc2V0OiBEb3VibGUsIGxhbmVCb3JkZXI6IExhbmVCb3JkZXIpOiBQb2ludCA9IHsKICAgICAgICB2YWwgc3RhcnRPZmZzZXQgPSB0TGluZVBvbHlMaW5lLmdldE9mZnNldChsYW5lQm9yZGVyLmdlb21ldHJ5LnB0cy5oZWFkLCBjdCkKICAgICAgICB2YWwgZW5kT2Zmc2V0ID0gdExpbmVQb2x5TGluZS5nZXRPZmZzZXQobGFuZUJvcmRlci5nZW9tZXRyeS5wdHMubGFzdCwgY3QpCiAgICAgICAgaWYgKG1hdGguYWJzKHN0YXJ0T2Zmc2V0IC0gb2Zmc2V0KSA+IG1hdGguYWJzKGVuZE9mZnNldCAtIG9mZnNldCkpIHsKICAgICAgICAgIGxhbmVCb3JkZXIuZ2VvbWV0cnkucHRzLmxhc3QKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbGFuZUJvcmRlci5nZW9tZXRyeS5wdHMuaGVhZAogICAgICAgIH0KICAgICAgfQogICAgICB2YWwgbGVuZ3RoID0gdExpbmVQb2x5TGluZS5sZW5ndGgoY3QpCiAgICAgIGlmIChtaXNzaW5nSW50ZXJ2YWwuc3RhcnQgPT0gMCAmJiBtaXNzaW5nSW50ZXJ2YWwuZW5kID09IGxlbmd0aCkgewogICAgICAgIHJldHVybiAoTm9uZSwgU2VxLmVtcHR5KQogICAgICB9IGVsc2UgaWYgKG1hdGguYWJzKG1pc3NpbmdJbnRlcnZhbC5zdGFydCAtIG1pc3NpbmdJbnRlcnZhbC5lbmQpIDwgRkxPQVRfRVJST1JfRVBTSUxPTikgewogICAgICAgIHJldHVybiAoTm9uZSwgU2VxLmVtcHR5KQogICAgICB9IGVsc2UgaWYgKG1pc3NpbmdJbnRlcnZhbC5zdGFydCA+IG1pc3NpbmdJbnRlcnZhbC5lbmQpIHsKICAgICAgICByZXR1cm4gKE5vbmUsIFNlcS5lbXB0eSkKICAgICAgfSBlbHNlIGlmIChtaXNzaW5nSW50ZXJ2YWwuc3RhcnQgPT0gMCkgewogICAgICAgIHJldHVybiAoTm9uZSwgU2VxLmVtcHR5KQogICAgICB9IGVsc2UgaWYgKG1pc3NpbmdJbnRlcnZhbC5lbmQgPT0gbGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIChOb25lLCBTZXEuZW1wdHkpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFsIGNhbmRpZGF0ZVN0YXJ0TGIgPSBsYkludGVydmFsLmZpbmQoXy5fMi5lbmQgPT0gbWlzc2luZ0ludGVydmFsLnN0YXJ0KQogICAgICAgIHZhbCBjYW5kaWRhdGVFbmRMYiA9IGxiSW50ZXJ2YWwuZmluZChfLl8yLnN0YXJ0ID09IG1pc3NpbmdJbnRlcnZhbC5lbmQpCiAgICAgICAgaWYgKGNhbmRpZGF0ZVN0YXJ0TGIuaXNEZWZpbmVkICYmIGNhbmRpZGF0ZUVuZExiLmlzRGVmaW5lZCkgewogICAgICAgICAgdmFsIHN0YXJ0UG9pbnQgPSBnZXRMYlZlcnRleChtaXNzaW5nSW50ZXJ2YWwuc3RhcnQsIGNhbmRpZGF0ZVN0YXJ0TGIuZ2V0Ll8xKQogICAgICAgICAgdmFsIGVuZFBvaW50ID0gZ2V0TGJWZXJ0ZXgobWlzc2luZ0ludGVydmFsLmVuZCwgY2FuZGlkYXRlRW5kTGIuZ2V0Ll8xKQogICAgICAgICAgaWYgKHN0YXJ0UG9pbnQgPT0gZW5kUG9pbnQpIHsKICAgICAgICAgICAgcmV0dXJuIChOb25lLCBTZXEuZW1wdHkpCiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gKFNvbWUoUG9seUxpbmUoU2VxKHN0YXJ0UG9pbnQsIGVuZFBvaW50KSkpLCBTZXEoY2FuZGlkYXRlU3RhcnRMYi5nZXQuXzEsIGNhbmRpZGF0ZUVuZExiLmdldC5fMSkpCiAgICAgICAgfQogICAgICB9CiAgICAgIChOb25lLCBTZXEuZW1wdHkpCiAgICB9CgogICAgdmFsIHRMaW5lUG9seUxpbmU6IE9wdGlvbltQb2x5TGluZV0gPSB0TGluZS5nZXRQb2x5TGluZShzcGFjZSkKICAgIHZhbCBsYk9mZnNldEludGVydmFsID0KICAgICAgZ2V0Qm9yZGVyUmVmcyh0TGluZVBvbHlMaW5lLmdldCkuZmlsdGVyTm90KGkgPT4gaS5fMS5lbnRpdHlEYXRhLmJvcmRlclR5cGUgPT0gQm9yZGVyVHlwZS5ST0FEX0JPUkRFUikKICAgIHZhbCBub0xiSW50ZXJ2YWwgPSBkaWZmKEludGVydmFsKDAsIHRMaW5lUG9seUxpbmUuZ2V0Lmxlbmd0aChjdCkpLCBsYk9mZnNldEludGVydmFsLm1hcChfLl8yKSwgdExpbmVQb2x5TGluZS5nZXQpCiAgICB2YWwgcmVzID0gbm9MYkludGVydmFsLmZsYXRNYXAoaSA9PiBnZW5lcmF0ZVZCUGwoaSwgbGJPZmZzZXRJbnRlcnZhbCwgdExpbmVQb2x5TGluZS5nZXQpLl8xKQogICAgcmVzCiAgfQp9Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Y2FzZSBjbGFzcyBNeGZPYmplY3RJZCAoKQo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">CiAgICAgICAgdmFsIHJlc3VsdCA9IHRyYWNlRmluYWwoZGFzaExpbmVTZWdtZW50SWQsIHJlY29yZHMsIHBhcmFtcygiaXNfYmFja3dhcmQiKS50b0Jvb2xlYW4pCiAgICAgICAgZ3Nvbi50b0pzb24ocmVzdWx0KQ==</text>
      </register>
      <register name=":" type="4">
        <text>343</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search>ctor</last-search>
      <last-offset />
      <last-pattern>ctor</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>